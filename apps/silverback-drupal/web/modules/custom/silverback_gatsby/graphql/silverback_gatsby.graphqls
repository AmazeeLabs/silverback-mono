schema {
  query: Query
}

type Change {
  type: ChangeType!
  id: Int!
}

enum ChangeType {
  Update
  Delete
}

interface Translatable {
  id: Int!
  translations: [Translation!]!
}

interface Translation {
  langcode: String!
}

type Query {
  page(id: Int!): Page
  pages(
    offset: Int!
    limit: Int!
  ): [Page!]!
  pageChanges(since: Int!, ids: [Int!]!): [Change!]!

  gutenbergPage(id: Int!): GutenbergPage
  gutenbergPages(
    offset: Int!
    limit: Int!
  ): [GutenbergPage!]!
  gutenbergPageChanges(since: Int!, ids: [Int!]!): [Change!]!

  article(id: Int!): Article
  articles(
    offset: Int!
    limit: Int!
  ): [Article!]!
  articleChanges(since: Int!, ids: [Int!]!): [Change!]!

  image(id: Int!): Image
  images(
    offset: Int!
    limit: Int!
  ): [Image!]!
  imageChanges(since: Int!, ids: [Int!]!): [Change!]!

  tag(id: Int!): Tag
  tags(
    offset: Int!
    limit: Int!
  ): [Tag!]!
  tagChanges(since: Int!, ids: [Int!]!): [Change!]!
}
type Image {
  id: Int!
}

type Tag {
  id: Int!
}

type Page implements Translatable {
  id: Int!
  translations: [PageTranslation!]!
}

type PageTranslation implements Translation {
  langcode: String!
}

type GutenbergPage implements Translatable {
  id: Int!
  translations: [GutenbergPageTranslation!]!
}

type GutenbergPageTranslation implements Translation {
  langcode: String!
}

type Article implements Translatable {
  id: Int!
  translations: [ArticleTranslation!]!
}

type ArticleTranslation implements Translation {
  langcode: String!
}
