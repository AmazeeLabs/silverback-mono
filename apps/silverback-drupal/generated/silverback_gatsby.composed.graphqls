"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\Arg".
"""
directive @arg(name: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityReference".
"""
directive @resolveEntityReference(field: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityReferenceRevisions".
"""
directive @resolveEntityReferenceRevisions(field: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\Lang".
"""
directive @lang(code: String) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\MenuItemId".
"""
directive @resolveMenuItemId repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\MenuItemLabel".
"""
directive @resolveMenuItemLabel repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\MenuItemParentId".
"""
directive @resolveMenuItemParentId repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\MenuItemUrl".
"""
directive @resolveMenuItemUrl repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\MenuItems".
"""
directive @resolveMenuItems(max_level: Int) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "silverback_gatsby" module.
Implemented in "Drupal\silverback_gatsby\Plugin\GraphQL\Directive\EntityTranslationsWithDefault".
"""
directive @entityTranslationsWithDefault repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "silverback_gatsby" module.
Implemented in "Drupal\silverback_gatsby\Plugin\GraphQL\Directive\MenuLangcode".
"""
directive @menuLangcode repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "silverback_gatsby" module.
Implemented in "Drupal\silverback_gatsby\Plugin\GraphQL\Directive\MenuTranslations".
"""
directive @menuTranslations repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "silverback_gatsby" module.
Implemented in "Drupal\silverback_gatsby\Plugin\GraphQL\Directive\SilverbackGatsbyEntityId".
"""
directive @silverbackGatsbyEntityId repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "silverback_gutenberg" module.
Implemented in "Drupal\silverback_gutenberg\Plugin\GraphQL\Directive\EditorBlockChildren".
"""
directive @resolveEditorBlockChildren repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "silverback_gutenberg" module.
Implemented in "Drupal\silverback_gutenberg\Plugin\GraphQL\Directive\EditorBlockMarkup".
"""
directive @resolveEditorBlockMarkup repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "silverback_gutenberg" module.
Implemented in "Drupal\silverback_gutenberg\Plugin\GraphQL\Directive\EditorBlockMedia".
"""
directive @resolveEditorBlockMedia repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "silverback_gutenberg" module.
Implemented in "Drupal\silverback_gutenberg\Plugin\GraphQL\Directive\EditorBlockType".
"""
directive @resolveEditorBlockType repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Apply all directives on the right to output on the left.
"""
directive @map repeatable on FIELD_DEFINITION

"""
Directive for the responsive_image data producer.

Provided by the "silverback_cloudinary" module.
Implemented in "Drupal\silverback_cloudinary\Plugin\GraphQL\Directive\ResponsiveImage".
"""
directive @responsiveImage(width: String, height: String, sizes: String, transform: String) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Fetch an entity or entity revision based on id, rid or route

Provided by the "silverback_gatsby" module.
Implemented in "Drupal\silverback_gatsby\Plugin\GraphQL\Directive\EntityFetch".
"""
directive @fetchEntity(type: String, id: String, rid: String, language: String, operation: String) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Load a given entity by it's path or type and id or uuid

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityLoad".
"""
directive @loadEntity(route: String, type: String, uuid: String, id: String, operation: String) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Mark a type as member of a generic.
The id argument contains a string that has to match the generics resolution.
"""
directive @type(id: String!) repeatable on OBJECT

"""
Parse a gutenberg document into block data.

Provided by the "silverback_gutenberg" module.
Implemented in "Drupal\silverback_gutenberg\Plugin\GraphQL\Directive\EditorBlocks".
"""
directive @resolveEditorBlocks(path: String!, ignored: [String!], aggregated: [String!]) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provide a default value for a given type.
"""
directive @default repeatable on UNION | ENUM | SCALAR | OBJECT | INTERFACE

"""
Provide a static value as JSON string.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\Value".
"""
directive @value(json: String, int: Int, float: Float, string: String, boolean: Boolean) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Pull a specific typed-data property from an entity.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityProperty".
"""
directive @resolveProperty(path: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Resolve a path to an Url object.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\Route".
"""
directive @route(path: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve a specific translation of an entity.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityTranslation".
"""
directive @resolveEntityTranslation(lang: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve all translations of an entity.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityTranslations".
"""
directive @resolveEntityTranslations repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an editor block attribute.

Provided by the "silverback_gutenberg" module.
Implemented in "Drupal\silverback_gutenberg\Plugin\GraphQL\Directive\EditorBlockAttribute".
"""
directive @resolveEditorBlockAttribute(key: String!, plainText: Boolean) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an entities bundle.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityBundle".
"""
directive @resolveEntityBundle repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an entities id.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityId".
"""
directive @resolveEntityId repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an entities label.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityLabel".
"""
directive @resolveEntityLabel repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an entities type id.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityType".
"""
directive @resolveEntityType repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an entities url path.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityPath".
"""
directive @resolveEntityPath repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an entities uuid.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityUuid".
"""
directive @resolveEntityUuid repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an images public url.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\ImageUrl".
"""
directive @imageUrl repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an object or map property.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\Prop".
"""
directive @prop(key: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve the language of an entity.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityLanguage".
"""
directive @resolveEntityLanguage repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve the properties of an image.

Provided by the "silverback_gatsby" module.
Implemented in "Drupal\silverback_gatsby\Plugin\GraphQL\Directive\ImageProps".
"""
directive @imageProps repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Seek a specific element in a list.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\Seek".
"""
directive @seek(pos: Int!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

directive @autoloadStatic on FIELD_DEFINITION

directive @autoloadService on FIELD_DEFINITION

schema {
  query: Query
  mutation: Mutation
}

scalar ResponsiveImage

type Mutation {
  getRandomInt(randomInt: Int!): Int!
}

type Query {
  autoloadStatic: String @autoloadStatic
  autoloadService: String @autoloadService
}

type Image @entity(type: "media", bundle: "image") {
  url: String!
  alt: String! @resolveProperty(path: "field_media_image.0.alt")
}

type Tag @entity(type: "taxonomy_term", bundle: "tag") {
  title: String! @resolveProperty(path: "name.value")
}

type Page @entity(type: "node", bundle: "page") {
  id: String! @resolveEntityUuid
  path: String! @isPath @resolveEntityPath
  title: String! @resolveProperty(path: "title.value")
  body: String @resolveProperty(path: "field_body.0.processed")
  paragraphs: [PageParagraphs]! @resolveEntityReferenceRevisions(field: "field_paragraphs")
}

union PageParagraphs = ParagraphText | ParagraphReferences

type ParagraphText {
  text: String @resolveProperty(path: "field_text.0.value")
}

type ParagraphReferences {
  references: [Article]! @resolveEntityReference(field: "field_references")
  singleReference: GutenbergPage @resolveEntityReference(field: "field_single_reference") @seek(pos: 0)
}

type GutenbergPage @entity(type: "node", bundle: "gutenberg_page") {
  path: String! @isPath @resolveEntityPath
  title: String! @resolveProperty(path: "title.value")
  anotherResponsiveImage(width: Int, height: Int, sizes: [[Int!]!], transform: String): ResponsiveImage
  body: [RootBlock]! @resolveEditorBlocks(path: "body.value", ignored: ["custom\/root", "core\/columns"])
}

type Webform @entity(type: "webform", access: false) {
  path: String! @isPath @resolveEntityPath
  url: String!
  title: String! @resolveProperty(path: "title")
}

type Article @entity(type: "node", bundle: "article") {
  path: String! @isPath @resolveEntityPath
  title: String! @resolveProperty(path: "title.value")
  body: String @resolveProperty(path: "field_body.0.processed")
  responsiveImage(width: Int, height: Int, sizes: [[Int!]!], transform: String): ResponsiveImage
  tags: [Tag]! @resolveEntityReference(field: "field_tags")
  image: Image @resolveEntityReference(field: "field_image") @seek(pos: 0)
  template: String @isTemplate
}

union RootBlock @resolveEditorBlockType = BlockTwoColumns | BlockHtmlList | BlockHtmlParagraph | BlockHtmlQuote | BlockImage | BlockTeaser

union ContentBlock @resolveEditorBlockType = BlockHtmlList | BlockHtmlParagraph | BlockHtmlQuote | BlockImage | BlockTeaser

type BlockTwoColumns @type(id: "custom\/two-columns") {
  children: [BlockColumn]! @resolveEditorBlockChildren
}

type BlockColumn @type(id: "core\/column") {
  children: [ContentBlock]! @resolveEditorBlockChildren
}

type BlockHtmlParagraph @type(id: "core\/paragraph") {
  html: String! @resolveEditorBlockMarkup
}

type BlockHtmlList @type(id: "core\/list") {
  html: String! @resolveEditorBlockMarkup
}

type BlockHtmlQuote @type(id: "core\/quote") {
  html: String! @resolveEditorBlockMarkup
}

type BlockImage @type(id: "drupalmedia\/drupal-media-entity") {
  caption: String! @resolveEditorBlockAttribute(key: "caption")
  image: Image @resolveEditorBlockMedia
}

type BlockTeaser @type(id: "custom\/teaser") {
  image: Image @resolveEditorBlockMedia
  title: String! @resolveEditorBlockAttribute(key: "title")
  subtitle: String! @resolveEditorBlockAttribute(key: "subtitle")
  url: String! @resolveEditorBlockAttribute(key: "url")
}

type MenuItem {
  id: String! @resolveMenuItemId
  parent: String @resolveMenuItemParentId
  label: String! @resolveMenuItemLabel
  url: String! @resolveMenuItemUrl
}

type MainMenu @menu(menu_id: "main") {
  items: [MenuItem]! @lang @resolveMenuItems
}

type FirstLevelMainMenu @menu(menu_id: "main", max_level: 1) {
  items: [MenuItem]! @lang @resolveMenuItems(max_level: 1)
}

type GatsbyStringTranslation @stringTranslation(contextPrefix: "gatsby")

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\Arg".
"""
directive @arg(name: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityReference".
"""
directive @resolveEntityReference(field: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityReferenceRevisions".
"""
directive @resolveEntityReferenceRevisions(field: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\Lang".
"""
directive @lang(code: String) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\MenuItemId".
"""
directive @resolveMenuItemId repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\MenuItemLabel".
"""
directive @resolveMenuItemLabel repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\MenuItemParentId".
"""
directive @resolveMenuItemParentId repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\MenuItemUrl".
"""
directive @resolveMenuItemUrl repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\MenuItems".
"""
directive @resolveMenuItems(max_level: Int) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Apply all directives on the right to output on the left.
"""
directive @map repeatable on FIELD_DEFINITION

"""
Load a given entity by it's path or type and id or uuid

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityLoad".
"""
directive @loadEntity(route: String, type: String, uuid: String, id: String, operation: String) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Mark a type as member of a generic.
The id argument contains a string that has to match the generics resolution.
"""
directive @type(id: String!) repeatable on OBJECT

"""
Provide a default value for a given type.
"""
directive @default repeatable on UNION | ENUM | SCALAR | OBJECT | INTERFACE

"""
Provide a static value as JSON string.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\Value".
"""
directive @value(json: String, int: Int, float: Float, string: String, boolean: Boolean) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Pull a specific typed-data property from an entity.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityProperty".
"""
directive @resolveProperty(path: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Resolve a path to an Url object.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\Route".
"""
directive @route(path: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve a specific translation of an entity.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityTranslation".
"""
directive @resolveEntityTranslation(lang: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve all translations of an entity.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityTranslations".
"""
directive @resolveEntityTranslations repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an entities bundle.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityBundle".
"""
directive @resolveEntityBundle repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an entities id.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityId".
"""
directive @resolveEntityId repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an entities label.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityLabel".
"""
directive @resolveEntityLabel repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an entities type id.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityType".
"""
directive @resolveEntityType repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an entities url path.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityPath".
"""
directive @resolveEntityPath repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an entities uuid.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityUuid".
"""
directive @resolveEntityUuid repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an images public url.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\ImageUrl".
"""
directive @imageUrl repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an object or map property.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\Prop".
"""
directive @prop(key: String!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve the language of an entity.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\EntityLanguage".
"""
directive @resolveEntityLanguage repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Seek a specific element in a list.

Provided by the "graphql_directives" module.
Implemented in "Drupal\graphql_directives\Plugin\GraphQL\Directive\Seek".
"""
directive @seek(pos: Int!) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Directive for the responsive_image data producer.

Provided by the "silverback_cloudinary" module.
Implemented in "Drupal\silverback_cloudinary\Plugin\GraphQL\Directive\ResponsiveImage".
"""
directive @responsiveImage(width: String, height: String, sizes: String, transform: String) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Associate a type with a Drupal entity type.
"""
directive @entity(type: String!, bundle: String, access: Boolean) on OBJECT

"""
Directive for the "MenuFeed" plugin.
menu_id: The internal menu id.
menu_ids: Internal menu id's. The first one the current user has access to will be picked.
item_type: GraphQL type for menu items.
           **DEPRECATED**: Explicitly define Menu item types with `resolveMenu*`
           directives instead.
max_level: The maximum level to be fetched.
           This can be used to optimizing caching. Most of the time only one or two
           levels of menus are immediately visible on the page. By declaring multiple
           types, we can generate different cache buckets, so a new menu item on a low
           level does not require a full rebuild of every page.
"""
directive @menu(menu_id: String, menu_ids: [String!], item_type: String, max_level: Int) on OBJECT

directive @isPath on FIELD_DEFINITION

directive @isTemplate on FIELD_DEFINITION

directive @stringTranslation(contextPrefix: String) on OBJECT

directive @translatableString(contextPrefix: String) on OBJECT

"""
Fetch an entity or entity revision based on id, rid or route

Provided by the "silverback_gatsby" module.
Implemented in "Drupal\silverback_gatsby\Plugin\GraphQL\Directive\EntityFetch".
"""
directive @fetchEntity(type: String, id: String, rid: String, language: String, operation: String) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve the properties of an image.

Provided by the "silverback_gatsby" module.
Implemented in "Drupal\silverback_gatsby\Plugin\GraphQL\Directive\ImageProps".
"""
directive @imageProps repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "silverback_gutenberg" module.
Implemented in "Drupal\silverback_gutenberg\Plugin\GraphQL\Directive\EditorBlockChildren".
"""
directive @resolveEditorBlockChildren repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "silverback_gutenberg" module.
Implemented in "Drupal\silverback_gutenberg\Plugin\GraphQL\Directive\EditorBlockMarkup".
"""
directive @resolveEditorBlockMarkup repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "silverback_gutenberg" module.
Implemented in "Drupal\silverback_gutenberg\Plugin\GraphQL\Directive\EditorBlockMedia".
"""
directive @resolveEditorBlockMedia repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Provided by the "silverback_gutenberg" module.
Implemented in "Drupal\silverback_gutenberg\Plugin\GraphQL\Directive\EditorBlockType".
"""
directive @resolveEditorBlockType repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Parse a gutenberg document into block data.

Provided by the "silverback_gutenberg" module.
Implemented in "Drupal\silverback_gutenberg\Plugin\GraphQL\Directive\EditorBlocks".
"""
directive @resolveEditorBlocks(path: String!, ignored: [String!], aggregated: [String!]) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

"""
Retrieve an editor block attribute.

Provided by the "silverback_gutenberg" module.
Implemented in "Drupal\silverback_gutenberg\Plugin\GraphQL\Directive\EditorBlockAttribute".
"""
directive @resolveEditorBlockAttribute(key: String!, plainText: Boolean) repeatable on FIELD_DEFINITION | SCALAR | UNION | ENUM | INTERFACE | OBJECT

type CampaignUrl @entity(type: "campaign_url", bundle: "campaign_url") {
  source: String! @resolveProperty(path: "campaign_url_source.value")
  destination: String! @resolveProperty(path: "campaign_url_destination.value")
  statusCode: Int! @resolveProperty(path: "status_code.value")
  force: Boolean! @resolveProperty(path: "force.value")
}

directive @entity(type: String!, bundle: String, access: Boolean) on OBJECT

directive @menu(menu_id: String, menu_ids: [String!], item_type: String, max_level: Int) on OBJECT

directive @stringTranslation(contextPrefix: String) on OBJECT

directive @translatableString(contextPrefix: String) on OBJECT

type _Feed {
  typeName: String!
  translatable: Boolean!
  singleFieldName: String!
  listFieldName: String!
  changes(lastBuild: Int, currentBuild: Int): [String!]!
  pathFieldName: String
  templateFieldName: String
}

directive @isPath on FIELD_DEFINITION

"""
DEPRECATED, use @isPath
"""
directive @path on FIELD_DEFINITION

directive @isTemplate on FIELD_DEFINITION

"""
DEPRECATED, use @isTemplate
"""
directive @template on FIELD_DEFINITION

extend type Query {
  _drupalBuildId: Int! @deprecated
  _drupalFeedInfo: [_Feed!]! @deprecated
  _currentUser: _User! @deprecated
}

type _User {
  id: String
  name: String
}

extend type Mutation {
  _original_typename: String! @deprecated
}

extend type Query {
  _original_typename: String! @deprecated
}

extend type Image {
  _original_typename: String! @deprecated
}

extend type Tag {
  _original_typename: String! @deprecated
}

extend type Page {
  _original_typename: String! @deprecated
}

extend type ParagraphText {
  _original_typename: String! @deprecated
}

extend type ParagraphReferences {
  _original_typename: String! @deprecated
}

extend type GutenbergPage {
  _original_typename: String! @deprecated
}

extend type Webform {
  _original_typename: String! @deprecated
}

extend type Article {
  _original_typename: String! @deprecated
}

extend type BlockTwoColumns {
  _original_typename: String! @deprecated
}

extend type BlockColumn {
  _original_typename: String! @deprecated
}

extend type BlockHtmlParagraph {
  _original_typename: String! @deprecated
}

extend type BlockHtmlList {
  _original_typename: String! @deprecated
}

extend type BlockHtmlQuote {
  _original_typename: String! @deprecated
}

extend type BlockImage {
  _original_typename: String! @deprecated
}

extend type BlockTeaser {
  _original_typename: String! @deprecated
}

extend type MenuItem {
  _original_typename: String! @deprecated
}

extend type MainMenu {
  _original_typename: String! @deprecated
}

extend type FirstLevelMainMenu {
  _original_typename: String! @deprecated
}

extend type GatsbyStringTranslation {
  _original_typename: String! @deprecated
}

extend type CampaignUrl {
  _original_typename: String! @deprecated
}

extend type _Feed {
  _original_typename: String! @deprecated
}

extend type Query {
  _loadImage(id: String!): Image @deprecated
  _queryImages(offset: Int, limit: Int): [Image]! @deprecated
}

extend type Image {
  _id: String! @deprecated
  _drupalId: String! @deprecated
  _defaultTranslation: Boolean! @deprecated
  _langcode: String! @deprecated
  _translations: [Image!]! @deprecated
}

extend type Query {
  _loadImageRevision(id: String!, revision: String!): Image @deprecated
}

extend type Query {
  _loadTag(id: String!): Tag @deprecated
  _queryTags(offset: Int, limit: Int): [Tag]! @deprecated
}

extend type Tag {
  _id: String! @deprecated
  _drupalId: String! @deprecated
  _defaultTranslation: Boolean! @deprecated
  _langcode: String! @deprecated
  _translations: [Tag!]! @deprecated
}

extend type Query {
  _loadTagRevision(id: String!, revision: String!): Tag @deprecated
}

extend type Query {
  _loadPage(id: String!): Page @deprecated
  _queryPages(offset: Int, limit: Int): [Page]! @deprecated
}

extend type Page {
  _id: String! @deprecated
  _drupalId: String! @deprecated
  _defaultTranslation: Boolean! @deprecated
  _langcode: String! @deprecated
  _translations: [Page!]! @deprecated
}

extend type Query {
  _loadPageRevision(id: String!, revision: String!): Page @deprecated
}

extend type Query {
  _loadGutenbergPage(id: String!): GutenbergPage @deprecated
  _queryGutenbergPages(offset: Int, limit: Int): [GutenbergPage]! @deprecated
}

extend type GutenbergPage {
  _id: String! @deprecated
  _drupalId: String! @deprecated
  _defaultTranslation: Boolean! @deprecated
  _langcode: String! @deprecated
  _translations: [GutenbergPage!]! @deprecated
}

extend type Query {
  _loadGutenbergPageRevision(id: String!, revision: String!): GutenbergPage @deprecated
}

extend type Query {
  _loadWebform(id: String!): Webform @deprecated
  _queryWebforms(offset: Int, limit: Int): [Webform]! @deprecated
}

extend type Webform {
  _id: String! @deprecated
  _drupalId: String! @deprecated
}

extend type Query {
  _loadWebformRevision(id: String!, revision: String!): Webform @deprecated
}

extend type Query {
  _loadArticle(id: String!): Article @deprecated
  _queryArticles(offset: Int, limit: Int): [Article]! @deprecated
}

extend type Article {
  _id: String! @deprecated
  _drupalId: String! @deprecated
  _defaultTranslation: Boolean! @deprecated
  _langcode: String! @deprecated
  _translations: [Article!]! @deprecated
}

extend type Query {
  _loadArticleRevision(id: String!, revision: String!): Article @deprecated
}

extend type Query {
  _loadMainMenu(id: String!): MainMenu @deprecated
  _queryMainMenus(offset: Int, limit: Int): [MainMenu]! @deprecated
}

extend type MainMenu {
  _id: String! @deprecated
  _drupalId: String! @deprecated
  _defaultTranslation: Boolean! @deprecated
  _langcode: String! @deprecated
  _translations: [MainMenu!]! @deprecated
}

extend type Query {
  _loadFirstLevelMainMenu(id: String!): FirstLevelMainMenu @deprecated
  _queryFirstLevelMainMenus(offset: Int, limit: Int): [FirstLevelMainMenu]! @deprecated
}

extend type FirstLevelMainMenu {
  _id: String! @deprecated
  _drupalId: String! @deprecated
  _defaultTranslation: Boolean! @deprecated
  _langcode: String! @deprecated
  _translations: [FirstLevelMainMenu!]! @deprecated
}

extend type Query {
  _loadGatsbyStringTranslation(id: String!): GatsbyStringTranslation @deprecated
  _queryGatsbyStringTranslations(offset: Int, limit: Int): [GatsbyStringTranslation]! @deprecated
}

extend type GatsbyStringTranslation {
  _id: String! @deprecated
  _drupalId: String! @deprecated
}

extend type GatsbyStringTranslation {
  source: String!
  context: String
  translations: [GatsbyStringTranslationTranslation]
}

type GatsbyStringTranslationTranslation {
  id: String!
  source: String!
  langcode: String!
  translation: String!
}

extend type Query {
  _loadCampaignUrl(id: String!): CampaignUrl @deprecated
  _queryCampaignUrls(offset: Int, limit: Int): [CampaignUrl]! @deprecated
}

extend type CampaignUrl {
  _id: String! @deprecated
  _drupalId: String! @deprecated
}

extend type Query {
  _loadCampaignUrlRevision(id: String!, revision: String!): CampaignUrl @deprecated
}
