name: Drupal Updates
on:
  pull_request:
    branches:
      - development
jobs:
  test:
    name: Check for forgotten config changes
    runs-on: ubuntu-latest
    steps:

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Checkout BASE
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.base.ref }}

      - name: Read .nvmrc
        run: echo "##[set-output name=NODE_VERSION;]$(cat .nvmrc| grep -oE '[0-9]+(\.[0-9]+)?(\.[0-9]+)?' | head -1)"
        id: node_version

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.node_version.outputs.NODE_VERSION }}"

      - name: Tell yarn to use bash
        run: yarn config set script-shell /bin/bash

      - name: Get Yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Get Yarn version hash
        id: yarn-version
        run: echo "::set-output name=hash::$(yarn --version | shasum | cut -d' ' -f1)"
      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer global config cache-files-dir)"
      - name: Get Composer version hash
        id: composer-version
        run: |
          echo "::set-output name=hash::$(composer --version | shasum | cut -d' ' -f1)"
      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ${{ steps.yarn-cache.outputs.dir }}
            ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ steps.yarn-version.outputs.hash }}-composer-${{ steps.composer-version.outputs.hash }}-github_run_id-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ steps.yarn-version.outputs.hash }}-composer-${{ steps.composer-version.outputs.hash }}-

      - name: Install dependencies and setup Drupal
        run: yarn install --frozen-lockfile

      - name: Checkout HEAD
        run: git checkout ${{ github.event.pull_request.head.ref }}

      - name: Check if there are config changes after Drupal updates
        run: |
          set -e
          cd apps/silverback-drupal
          source .envrc
          set -x
          # Delete vendor dir to avoid potential issues with `composer install`.
          rm -rf vendor && composer install
          output=$(drush -y updb --cache-clear=0 2>&1)
          if echo $output | grep -q 'No pending updates'
          then
            echo "No drupal updates found."
            exit 0
          fi
          drush -y cr
          drush -y cex
          cd -
          # Check Git changes ignoring the config translations.
          if [[ $(git status --porcelain -- apps/silverback-drupal/config ':!apps/silverback-drupal/config/sync/language') ]]
          then
            set +x
            >&2 echo '⬇️ ⬇️ ⬇️ ⬇️ ⬇️️'
            >&2 echo 'WARNING: Found uncommitted Drupal config changes after applying Drupal database updates.'
            >&2 echo ''
            >&2 echo 'You can ignore this failure if you are really sure that everything is all right. This check exists to ensure that Drupal config changes brought by Drupal database updates are not forgotten. For example, Renovate needs a manual assistance for committing Drupal config changes delivered with Drupal database updates.'
            >&2 echo '⬇️ ⬇️ ⬇️ ⬇️ ⬇️️️️'
            set -x
            git status --porcelain -- apps/silverback-drupal/config ':!apps/silverback-drupal/config/sync/language'
            git diff -- apps/silverback-drupal/config ':!apps/silverback-drupal/config/sync/language'
            false
          else
            echo 'Success: Found no new config changes.'
          fi
