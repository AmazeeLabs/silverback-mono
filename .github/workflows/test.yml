name: Test
on:
  pull_request:
    branches:
      - development
jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04
    steps:
      - name: Git mail
        run: git config --global user.email "kitt@amazee.com"

      - name: Git username
        run: git config --global user.name "K.I.T.T."

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Read .nvmrc
        run: echo "##[set-output name=NODE_VERSION;]$(cat .nvmrc| grep -oE '[0-9]+(\.[0-9]+)?(\.[0-9]+)?' | head -1)"
        id: node_version

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.node_version.outputs.NODE_VERSION }}"

      - name: Tell yarn to use bash
        run: yarn config set script-shell /bin/bash

      - name: Get Yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Get Yarn version hash
        id: yarn-version
        run: echo "::set-output name=hash::$(yarn --version | shasum | cut -d' ' -f1)"
      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer global config cache-files-dir)"
      - name: Get Composer version hash
        id: composer-version
        run: |
          echo "::set-output name=hash::$(composer --version | shasum | cut -d' ' -f1)"
      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ${{ steps.yarn-cache.outputs.dir }}
            ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ steps.yarn-version.outputs.hash }}-composer-${{ steps.composer-version.outputs.hash }}-github_run_id-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ steps.yarn-version.outputs.hash }}-composer-${{ steps.composer-version.outputs.hash }}-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run static tests
        if: startsWith(github.head_ref, 'test-all/') == false
        run: yarn test:static
      - name: Run all static tests
        if: startsWith(github.head_ref, 'test-all/') == true
        run: yarn test:static:all

      - name: Run unit tests
        if: startsWith(github.head_ref, 'test-all/') == false
        run: yarn test:unit
      - name: Run all unit tests
        if: startsWith(github.head_ref, 'test-all/') == true
        run: yarn test:unit:all

      - name: Run integration tests
        if: startsWith(github.head_ref, 'test-all/') == false
        run: yarn test:integration
      - name: Run all integration tests
        if: startsWith(github.head_ref, 'test-all/') == true
        run: yarn test:integration:all

      - name: Gatsby log
        run: cat /tmp/gatsby.log || true
        if: always()
      - name: Drupal log
        run: cat /tmp/drupal.log || true
        if: always()

      - name: Check for uncommitted changes
        run: |
          if [[ $(git status --porcelain) ]]
          then
            echo "Error: Found uncommitted changes. Lerna publish will fail."
            git status --porcelain
            git diff
            false
          else
            echo "Success: Found no uncommitted changes"
          fi

      - name: Check if there are config changes after Drupal updates
        run: |
          set -e
          cd apps/silverback-drupal
          source .envrc
          composer i
          silverback setup --no-config-import
          drush cex -y
          cd -
          if [[ $(git status --porcelain -- apps/silverback-drupal/config ':!apps/silverback-drupal/config/sync/language') ]]
          then
            >&2 echo 'Error: Found uncommitted Drupal config.'
            >&2 echo 'If it was due to a Drupal database update which changed the Drupal config: checkout this branch locally, switch to `apps/silverback-drupal` dir, run `composer i && silverback setup --no-config-import && drush cex -y`, review the config changes, commit and push.'
            >&2 echo 'If it was an intentional change to the Drupal config: checkout this branch locally, switch to `apps/silverback-drupal` dir, run `composer i && silverback setup --profile=minimal`, commit and push.'
            git status --porcelain -- apps/silverback-drupal/config ':!apps/silverback-drupal/config/sync/language'
            false
          else
            echo 'Success: Found no new config changes.'
          fi
