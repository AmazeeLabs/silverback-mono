scalar Email

type Query {
  value: String @echo(msg: "value from schema")
  argument(msg: String!): String @echo(msg: "$msg")
  parent: String
    @resolveBy(fn: "@amazeelabs/test-directives#parentValue")
    @echo(msg: "$")
  allContacts: [Contact] @gatsbyNodes(type: "Contact")
  getPerson(id: ID!): Person @gatsbyNode(type: "Contact", id: "$id")
}

union Person = Customer | Employee

interface Contact {
  name: String!
  email: Email!
}

type Customer implements Contact
  @sourceFrom(fn: "@amazeelabs/test-directives#sourceCustomers") {
  id: ID!
  name: String!
  email: Email!
}

type Employee implements Contact
  @sourceFrom(fn: "@amazeelabs/test-directives#sourceEmployees") {
  id: ID!
  role: String!
  name: String!
  email: Email!
}
