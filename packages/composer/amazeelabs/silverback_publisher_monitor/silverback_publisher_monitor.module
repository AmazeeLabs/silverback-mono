<?php

use Drupal\Core\Url;

/**
 * Retrieve the url publisher is available at.
 * Defaults to http://localhost:8000.
 *
 * @return string
 */
function publisher_url() {
  return getenv('PUBLISHER_URL') ?: 'http://localhost:8000';
}

/**
 * Implements hook_library_info_build().
 */
function silverback_publisher_monitor_library_info_build() {
  return [
    'ws_indicator' => [
      'js' => [
        'js/ws-indicator.js' => [],
      ],
      'css' => [
        'theme' => [
          'css/indicator.css' => [],
        ],
      ],
    ],
  ];
}

function silverback_publisher_monitor_page_attachments(&$variables) {
  $websocketUrl = publisher_url();
  $websocketUrl = str_replace('http://', 'ws://', $websocketUrl);
  $websocketUrl = str_replace('https://', 'wss://', $websocketUrl);
  $websocketUrl = $websocketUrl  . '/___status/updates';
  $variables['#attached']['library'][] = 'silverback_publisher_monitor/ws_indicator';
  $variables['#attached']['drupalSettings']['publisherUpdateWebsocketUrl'] = $websocketUrl;
}

/**
 * Implements hook_toolbar().
 */
function silverback_publisher_monitor_toolbar() {
  $items = [];
  $currentUser = \Drupal::currentUser();
  $hasTriggerBuildPermission = $currentUser->hasPermission('trigger a gatsby build');
  $hasAccessPublisherPermission = $currentUser->hasPermission('access publisher');

  $statusElement = [
    '#type' => 'link',
    '#title' => t('Publisher status'),
    '#url' => Url::fromRoute('<current>'),
    '#options' => [
      'attributes' => [
        'class' => ['silverback-publisher__monitor-indicator'],
      ],
    ],
    '#cache' => [
      'max-age' => 0,
    ],
  ];

  // Fallback to the status element if no permissions are set.
  // As we don't want to have a drop button without any links.
  $tab = [$statusElement];
  $wrapperClass = 'silverback-publisher-indicator-tab';

  if ($hasTriggerBuildPermission || $hasAccessPublisherPermission) {
    try {
      $buildUrl = Url::fromRoute('silverback_gatsby.build');
    } catch (\Throwable $e) {
      // Backwards compatibility for older versions of silverback_gatsby.
      $buildUrl = Url::fromUserInput('#');
      $hasTriggerBuildPermission = FALSE;
    }
    $buildLink = [
      '#type' => 'link',
      '#title' => t('Queue Gatsby build'),
      '#url' => $buildUrl,
      '#options' => [
        'attributes' => [
          'class' => ['use-ajax'],
        ],
      ],
      '#access' => $hasTriggerBuildPermission,
    ];

    $logsLink = [
      '#type' => 'link',
      '#title' => t('Publisher logs'),
      '#url' => Url::fromUri(publisher_url() . '/___status'),
      '#options' => [
        'attributes' => [
          'target' => '_blank',
        ],
      ],
      '#access' => $hasAccessPublisherPermission,
    ];

    $dropButton = [
      '#type' => 'dropbutton',
      '#dropbutton_type' => 'small',
      '#links' => [
        'status' => [
          'title' => $statusElement,
        ],
        // Default #links children does not support options,
        // so prepare a link render array and use the title
        // as a placeholder.
        // We could do some more advanced overrides or introduce
        // a new type that extends dropbutton, but keeping
        // it simple for now.
        'build' => [
          'title' => $buildLink,
        ],
        'logs' => [
          'title' => $logsLink,
        ],
      ],
    ];

    $tab = $dropButton;
    $wrapperClass = 'silverback-publisher-drop-button';
  }

  $items['silverback_publisher_monitor'] = [
    '#type' => 'toolbar_item',
    'tab' => $tab,
    '#wrapper_attributes' => [
      'class' => [$wrapperClass],
    ],
    '#weight' => 2000,
  ];

  return $items;
}
