<?php

use Drupal\Core\Url;

/**
 * Implements hook_toolbar().
 */
function silverback_external_preview_toolbar() {

  $toolbar_items = [];

  $page_entity = _silverback_external_preview_get_page_entity();

  if ($page_entity) {
    /* @var Drupal\silverback_external_preview\ExternalPreviewLink */
    $externalPreviewLink = \Drupal::service('silverback_external_preview.external_preview_link');
    if (getenv('EXTERNAL_PREVIEW_BASE_URL')) {

      /* @var $url Url */
      $url = $externalPreviewLink->getPreviewUrl($page_entity);
      $url_string = $url->toString();
      $toolbar_items['silverback_external_preview'] = [
        '#type' => 'toolbar_item',
        'tab' => [
          '#type' => 'link',
          '#title' => t('Preview website'),
          '#url' => Url::fromRoute('silverback_external_preview.preview', ['node' => $page_entity->id()]),
          '#cache' => [
            'max-age' => 0,
          ],
          '#attributes' => [
            'class' => [
              'use-ajax',
              'toolbar-icon',
              'toolbar-icon-external-preview',
            ],
            'data-dialog-type' => 'dialog',
            'data-dialog-renderer' => 'off_canvas',
            'data-dialog-options' => \Drupal\Component\Serialization\Json::encode([
              'width' => 170,
              'classes' => [
                'ui-dialog' => 'external-preview-dialog',
              ],
            ]),
            // We could open the preview with a default resolution and open the off canvas tray at the same time
            //            'onclick' => "window.open('$url_string','preview','resizable,width=1024,height=768');",
          ],
        ],
        '#wrapper_attributes' => [
          'class' => ['external-preview-toolbar-tab'],
        ],
        '#attached' => [
          'library' => [
            'silverback_external_preview/toolbar',
            'core/drupal.dialog.ajax',
          ],

        ],

        '#weight' => 1002,
      ];
    }

  }
  return $toolbar_items;
}

/**
 * Implements hook_theme().
 */
function silverback_external_preview_theme() {
  $theme = [];
  $theme['silverback_external_preview'] = [
    'variables' => [
      'url' => '',
      'open_external_label' => '',
      'entity_url' => '',
      'sizes' => [],
      'default_size' => 's',
    ],
  ];
  return $theme;
}


/**
 * Gets the current page main entity.
 *
 * @return \Drupal\Core\Entity\EntityInterface
 *   Current page main entity.
 */
function _silverback_external_preview_get_page_entity() {
  $page_entity = &drupal_static(__FUNCTION__, NULL);
  if (!empty($page_entity)) {
    return $page_entity;
  }
  $types = array_keys(\Drupal::entityTypeManager()->getDefinitions());
  $route = \Drupal::routeMatch();

  $page_entity = NULL;
  $params = $route->getParameters()->all();
  foreach ($types as $type) {
    if (!empty($params[$type])) {
      return $params[$type];
      // Load entity if available and return it
      $page_entity = \Drupal::entityTypeManager()
        ->getStorage($type)
        ->load($params[$type]);
      break;

    }
  }

  return $page_entity;

}
