<?php

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Url;
use Drupal\silverback_external_preview\ExternalPreviewLink;
use Drupal\Component\Serialization\Json;

/**
 * Implements hook_toolbar().
 */
function silverback_external_preview_toolbar() {

  $toolbar_items = [];
  /* @var ExternalPreviewLink */
  $externalPreviewLink = Drupal::service('silverback_external_preview.external_preview_link');
  if (getenv('EXTERNAL_PREVIEW_BASE_URL')) {
    $routeMatch = Drupal::routeMatch();
    /* @var $url Url */
    $url = $externalPreviewLink->getPreviewUrl($routeMatch);
    // Only add the toolbar item if we have a preview URL returned
    $params = $routeMatch->getParameters()->all();
    $entity = array_pop($params);
    if($entity instanceof ContentEntityInterface){
      $id = $url ? $entity->getEntityTypeId() . ':' . $entity->id() . ':'. $entity->get('langcode')->value : null;
    }
    $toolbar_items['silverback_external_preview'] = [
      '#type' => 'toolbar_item',
      '#cache' => [
        'contexts' => ['url'],
      ],
      '#wrapper_attributes' => [
        'class' => [
          'external-preview-toolbar-tab',
          $url ? '' : 'toolbar-tab-disabled',
        ],
        'title' => $url ? t('Preview website') : t('Preview not available for this page')
      ],
      '#attached' => [
        'library' => [
          'silverback_external_preview/toolbar',
          'core/drupal.dialog.ajax',
        ],
      ],
      '#weight' => 1002,
      'tab' => [
        '#type' => 'link',
        '#title' => t('<span>Preview website</span>'),
        '#url' => Url::fromRoute('silverback_external_preview.preview', [], [
          'query' => [
            'preview-id' => $id ?? NULL,
          ],
        ]),
        '#cache' => [
          'contexts' => ['url'],
        ],
        '#attributes' => [
          'class' => [
            'use-ajax',
            'toolbar-icon',
            'toolbar-icon-external-preview',
          ],
          'data-dialog-type' => 'dialog',
          'data-dialog-renderer' => 'off_canvas',
          'data-dialog-options' => Json::encode([
            'width' => 170,
            'classes' => [
              'ui-dialog' => 'external-preview-dialog',
            ],
          ]),
          // We could open the preview with a default resolution and open the off canvas tray at the same time
          // 'onclick' => "window.open('$url_string','preview','resizable,width=1024,height=768');",
        ],
      ],
    ];

  }

  return $toolbar_items;
}

/**
 * Implements hook_theme().
 */
function silverback_external_preview_theme() {
  $theme = [];
  $theme['silverback_external_preview'] = [
    'variables' => [
      'url' => '',
      'open_external_label' => '',
      'entity_url' => '',
      'sizes' => [],
    ],
  ];
  return $theme;
}

