<?php

use Drupal\Core\Asset\AttachedAssetsInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeInterface;
use Drupal\silverback_gutenberg\Utils;

/**
 * Implements hook_js_settings_alter().
 */
function silverback_gutenberg_js_settings_alter(array &$settings, AttachedAssetsInterface $assets) {
  if (isset($settings['gutenberg'])) {
    if (!isset($settings['gutenberg']['theme-support'])) {
      $settings['gutenberg']['theme-support'] = [];
    }
    $settings['gutenberg']['theme-support'] = [

        // Disable text colors.
        'colors' => [],
        'disableCustomColors' => TRUE,

        // Disable typography.
        'fontSizes' => [],
        'disableCustomFontSizes' => TRUE,
        '__experimentalDisableCustomLineHeight' => TRUE,
        '__experimentalDisableDropCap' => TRUE,

      ] + $settings['gutenberg']['theme-support'];
  }
}

/**
 * Implements hook_library_info_alter().
 */
function silverback_gutenberg_library_info_alter(&$libraries, $extension) {
  if ($extension === 'gutenberg') {
    $libraries['edit-node']['dependencies'][] = 'silverback_gutenberg/tweaks';
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function silverback_gutenberg_form_node_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $form_state->getFormObject()->getEntity();
  foreach (Utils::getGutenbergFields($node) as $field) {
      if (is_string($form[$field]['widget'][0]['#default_value'])) {
        $form[$field]['widget'][0]['#default_value'] =
          Utils::linkProcessor()->processLinks(
            $form[$field]['widget'][0]['#default_value'],
            'outbound',
            \Drupal::languageManager()->getLanguage(
              $form['langcode']['widget'][0]['value']['#default_value']
            )
          );
      }
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function silverback_gutenberg_node_presave(NodeInterface $node) {
  foreach (Utils::getGutenbergFields($node) as $field) {
    $field = $node->get($field);
    if (is_string($field->value)) {
      $field->value = Utils::linkProcessor()->processLinks(
        $field->value,
        'inbound'
      );
    }
  }
}

/**
 * Implements hook_silverback_gutenberg_link_processor_block_attrs_alter().
 */
function silverback_gutenberg_silverback_gutenberg_link_processor_block_attrs_alter(array &$attributes, array $context) {
  if ($context['blockName'] === 'drupalmedia/drupal-media-entity' && isset($attributes['caption'])) {
    $attributes['caption'] = $context['processLinksCallback']($attributes['caption']);
  }
}
